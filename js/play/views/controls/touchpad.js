// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'underscore', 'backbone', 'handlebars', 'hammer', 'play/views/controls/base', 'text!templates/touchpadOverlay.html'], function($, _, Backbone, handlebars, hammer, BaseView, TouchpadOverlayTemplate) {
    var TouchpadView;

    TouchpadView = BaseView.extend({
      overlayTemplate: handlebars.compile(TouchpadOverlayTemplate),
      onclick: function() {
        this.$el.addClass('control-active');
        return this.showOverlay();
      },
      showOverlay: function() {
        var close,
          _this = this;

        this.winx = $(window).width();
        this.winy = $(window).height();
        this.$overlay = $(this.overlayTemplate({
          top: this.model.get('y') * this.winy,
          left: this.model.get('x') * this.winx
        }));
        this.overlay = this.$overlay.get(0);
        $('body').append(this.$overlay);
        this.$overlay.hide().fadeIn(200);
        close = this.$overlay.find('.overlay-close-icon').get(0);
        hammer(this.overlay).on('drag', function(e) {
          return _this.dragEvent(e);
        });
        return hammer(this.overlay).on('tap', function(e) {
          if (e.target === close) {
            return _this.closeOverlay();
          } else {
            return _this.dragEvent(e);
          }
        });
      },
      dragEvent: function(e) {
        var x, y;

        e.gesture.preventDefault();
        x = e.gesture.center.pageX;
        if (x > this.winx) {
          x = this.winx;
        }
        if (x < 0) {
          x = 0;
        }
        y = e.gesture.center.pageY;
        if (y > this.winy) {
          y = this.winy;
        }
        if (y < 0) {
          y = 0;
        }
        this.model.set('x', x / this.winx);
        this.model.set('y', y / this.winy);
        return this.$overlay.find('.overlay-touchmarker').css({
          left: e.gesture.center.pageX,
          top: e.gesture.center.pageY
        });
      },
      closeOverlay: function() {
        var _this = this;

        this.$overlay.fadeOut(200, function() {
          return _this.$overlay.remove();
        });
        return this.$el.removeClass('control-active');
      }
    });
    return TouchpadView;
  });

}).call(this);
