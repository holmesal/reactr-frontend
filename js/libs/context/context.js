// Generated by CoffeeScript 1.6.2
(function() {
  var $;

  $ = jQuery;

  $.fn.extend({
    Burp: function(options) {
      var log, settings;

      settings = {
        speed: 200,
        distance: 40,
        debug: false,
        message: 'Cellar door.'
      };
      settings = $.extend(settings, options);
      log = function(words) {
        if (settings.debug ? words : void 0) {
          return console.log(words);
        }
      };
      return this.each(function() {
        var $el, container, elem, element, left, padx, pady, top;

        elem = '<div class="burp"><span class="burp-text">' + settings.message + '</span></div>';
        $el = $(elem);
        $(this).append($el);
        $el.children('.burp-text').css({
          'font-size': '14pt',
          'color': 'white',
          opacity: 0.7
        });
        padx = 20;
        pady = 7;
        $el.css({
          'position': 'absolute',
          'overflow': 'auto',
          'text-align': 'center',
          'background-color': 'rgba(0,0,0,0.6)',
          'padding-left': padx,
          'padding-right': padx,
          'padding-top': pady,
          'padding-bottom': pady,
          'border-radius': '10px',
          opacity: 0
        });
        container = $(this).position();
        $.extend(container, {
          width: $(this).outerWidth(),
          height: $(this).outerHeight()
        });
        element = {
          width: $el.outerWidth(),
          height: $el.outerHeight()
        };
        left = container.left + container.width / 2 - element.width / 2;
        top = container.top + container.height / 2 - element.height / 2 + settings.distance / 2;
        log(left);
        log(top);
        $el.css({
          left: left,
          top: top
        });
        return $el.animate({
          opacity: 1,
          top: '-=' + settings.distance / 2
        }, settings.speed, 'linear', function() {
          return $(this).animate({
            opacity: 0,
            top: '-=' + settings.distance / 2
          }, settings.speed, 'linear', function() {
            return $(this).remove();
          });
        });
      });
    }
  });

}).call(this);
